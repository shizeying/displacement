#配置日志打印的级别
#1.OFF:关闭日志，不打印任何日志
#2.FATAL：导致应用程序产生致命性的错误
#3.ERROR：程序发生错误，但不影响程序执行【项目上线时用】
#4.WARN：警告级别，表示可能会发生错误
#5.INFO：指定能够突出在粗粒度级别的应用程序运行情况的信息的消息
#6.DEBUG：指定细粒度信息事件是最有用的应用程序调试【在开发调试代码时用】
#7.ALL：打开所有日志记录
log4j.rootLogger=INFO,CONSOLE,PRODUCT,PRODUCT-ERROR
#------------------------------------------------日志输出到控制台--------------------------------------------------
#制定日志输出到控制台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#制定日志输出级别，输出debug级别以上的日志
log4j.appender.CONSOLE.Threshold=DEBUG
log4j.appender.CONSOLE.Encoding=UTF-8
#制定日志输出布局
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#布局输出格式
log4j.appender.CONSOLE.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH\:mm\:ss\:SSS} :%c-->%l :%m%n
#----------------------------------------------打印INFO级别及以上的日志到日志文件中--------------------------------------------------
#每天生成1个日志文件
log4j.appender.PRODUCT=org.apache.log4j.DailyRollingFileAppender
#true为追加写入【默认】，false为覆盖原来内容
log4j.appender.PRODUCT.Append=true
#制定每天产生一个新的文件
log4j.appender.PRODUCT.DatePattern='_'yyyy-MM-dd
#日志文件生成的路径
#log4j.appender.PRODUCT.File=${webapp.root}/WEB-INF/logs/info.log
log4j.appender.PRODUCT.File=logs/info.log
#制定打印INFO及以上级别的日志
log4j.appender.PRODUCT.Threshold=INFO
log4j.appender.PRODUCT.Encoding=UTF-8
#制定日志输出布局
log4j.appender.PRODUCT.layout=org.apache.log4j.PatternLayout
#布局输出格式
log4j.appender.PRODUCT.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH\:mm\:ss\:SSS} :%c-->%l :%m%n
#----------------------------------------------打印ERROR级别及以上的日志到日志文件中--------------------------------------------------
#每天生成1个日志文件
log4j.appender.PRODUCT-ERROR=org.apache.log4j.DailyRollingFileAppender
#true为追加写入【默认】，false为覆盖原来内容
log4j.appender.PRODUCT-ERROR.Append=true
#制定每天产生一个新的文件
log4j.appender.PRODUCT-ERROR.DatePattern='_'yyyy-MM-dd
#日志文件生成的路径
#log4j.appender.PRODUCT-ERROR.File=${webapp.root}/WEB-INF/logs/error.log
log4j.appender.PRODUCT-ERROR.File=logs/error.log
#制定打印ERROR及以上级别的日志
log4j.appender.PRODUCT-ERROR.Threshold=ERROR
log4j.appender.PRODUCT-ERROR.Encoding=UTF-8
#制定日志输出布局
log4j.appender.PRODUCT-ERROR.layout=org.apache.log4j.PatternLayout
#布局输出格式
log4j.appender.PRODUCT-ERROR.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH\:mm\:ss\:SSS} :%c-->%l :%m%n